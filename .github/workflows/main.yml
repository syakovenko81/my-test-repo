name: Check CODEOWNERS for Committer

on:
  pull_request:
    types: [closed]
    paths:
      - 'templates/ADO/**'
      - 'templates/ServiceNow/**'

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  run:
     runs-on: ubuntu-latest
     steps:
       - name: Update resources
         uses: test-room-7/action-update-file@v1
         with:
           file-path: 'README.md'
           commit-msg: Update file
           github-token: ${{ secrets.GH_PAT }}
     
  
  # file_changes:
  #   if: github.event.pull_request.merged == true
  #   name: File changes
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2

  #     # - name: Display Pull Request Author on Merge
  #     #   run: |
  #     #     author_username=${{ github.event.pull_request.user.login }}
  #     #     echo "The author of the pull request at merge was: $author_username"
  #     #     git log --oneline --name-status -m -- templates/
  #     #     echo "3333333333333333"
  #     #     git log --oneline --name-status -m -- templates/ | awk '/^A/ {print $2}'

  #     - name: Get Changed Files
  #       id: changed_files
  #       run: |
  #         changed_files=$(git log --oneline --name-status -m -- templates/ | awk '/^A/ {print $2}')
  #         username=${{ github.event.pull_request.user.login }}
  #         echo "::set-output name=files::$changed_files"
  #         echo "::set-output name=committer::$username"
  #         echo $changed_files
  #         echo $username
  #   outputs:
  #       files: ${{ steps.changed_files.outputs.files }}
  #       username: ${{ steps.changed_files.outputs.committer }}
        
  # sync_to_s3:
  #   runs-on: ubuntu-latest
  #   needs: file_changes
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  
  #     - name: Check CODEOWNERS file
  #       id: codeowners_file
  #       run: |
  #         echo ${{ needs.file_changes.outputs.files }}
  #         echo ${{ needs.file_changes.outputs.username }}
  #         while IFS= read -r line; do
  #           if [[ $line == *"${{ needs.file_changes.outputs.files }}"* && $line == *"@${{ needs.file_changes.outputs.username }}"* ]]; then
  #             echo "Exist"
  #             echo "::set-output name=mode::no"
  #             exit 0
  #           fi
  #         done < CODEOWNERS
  #         echo "Not exists"
  #         echo "::set-output name=mode::add"

  #     - name: Sync ADO templates to S3
  #       run: echo "aws s3 sync templates/ADO/ s3://tf-s3-ado-snow-sync-staging/ADO/"
        
  #     - name: Sync ServiceNow templates to S3
  #       run: echo "aws s3 sync templates/ServiceNow/ s3://tf-s3-ado-snow-sync-staging/ServiceNow/"
        
  #   outputs:
  #     mode: ${{ steps.codeowners_file.outputs.mode }}

  # add_to_codeowners:
  #   if: ${{ needs.sync_to_s3.outputs.mode == 'add' }}
  #   runs-on: ubuntu-latest
  #   needs: sync_to_s3
  #   steps:        
  #     - uses: actions/checkout@v1
  #     - uses: actions/setup-node@v1
      
  #     - name: Add committer to the CODEOWNER file
  #       run: |
  #         echo "test" >> CODEOWNERS
  #         #echo "${{ needs.file_changes.outputs.files }}       ${{ needs.file_changes.outputs.username }}" >> CODEOWNERS
          
  #     - name: Update CODEOWNERS
  #       uses: test-room-7/action-update-file@v1
  #       with:
  #         file-path: CODEOWNERS
  #         commit-msg: Update CODEOWNERS
  #         github-token: ${{ secrets.GH_PAT }}






















          
      # - name: Sync ADO templates to S3
      #   run: |
      #     echo "aws s3 sync templates/ADO/ s3://tf-s3-ado-snow-sync-staging/ADO/"
          
      # - name: Sync ServiceNow templates to S3
      #   run: |
      #     echo "aws s3 sync templates/ServiceNow/ s3://tf-s3-ado-snow-sync-staging/ServiceNow/"

  # sync_to_s3_for_new_files:
  #   if: ${{ needs.file_changes.outputs.mode == 'new' }}
  #   runs-on: ubuntu-latest
  #   needs: file_changes
      
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2

  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: '18'
                   
  #     - name: Sync ADO templates to S3
  #       run: |
  #         echo "aws s3 sync templates/ADO/ s3://tf-s3-ado-snow-sync-staging/ADO/"
          
  #     - name: Sync ServiceNow templates to S3
  #       run: |
  #         echo "aws s3 sync templates/ServiceNow/ s3://tf-s3-ado-snow-sync-staging/ServiceNow/"
          
# ################
#   check-codeowners:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Get Committer Username
#         id: committer_username
#         run: |
#           git log -1 --pretty=format:'%ae' | awk -F "+" '{print $2}' | awk -F "@" '{print $1}' | tr '[:upper:]' '[:lower:]'
#           echo "::set-output name=username::$(git log -1 --pretty=format:'%ae' | awk -F "+" '{print $2}' | awk -F "@" '{print $1}' | tr '[:upper:]' '[:lower:]')"
#           # Extracts the GitHub username associated with the latest commit

#       - name: Check if Committer is in CODEOWNERS
#         id: check_codeowners
#         run: |
#           committer_username="${{ steps.committer_username.outputs.username }}"
#           echo $committer_username
#           owners=$(awk '/^\*.*@/ {print $2}' CODEOWNERS)
#           if echo "$owners" | grep -qw "$committer_username"; then
#             echo "Committer is in CODEOWNERS"
#             echo "::set-output name=mode::true"
#           else
#             echo "Committer is not in CODEOWNERS"
#             echo "::set-output name=mode::false"
#           fi
#   job2:
#     if: ${{ needs.file_changes.outputs.mode != 'true' }}
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Get Committer Username
#         id: committer_username
#         run: |
#           git log -1 --pretty=format:'%ae' | awk -F "+" '{print $2}' | awk -F "@" '{print $1}' | tr '[:upper:]' '[:lower:]'
#           echo "::set-output name=username::$(git log -1 --pretty=format:'%ae' | awk -F "+" '{print $2}' | awk -F "@" '{print $1}' | tr '[:upper:]' '[:lower:]')"
#           # Extracts the GitHub username associated with the latest commit

#       - name: Check if Committer is in CODEOWNERS
#         id: check_codeowners
#         run: |
#           committer_username="${{ steps.committer_username.outputs.username }}"
#           echo $committer_username
#           owners=$(awk '/^\*.*@/ {print $2}' CODEOWNERS)
#           if echo "$owners" | grep -qw "$committer_username"; then
#             echo "Committer is in CODEOWNERS"
#           else
#             echo "Committer is not in CODEOWNERS"
#           fi
  

